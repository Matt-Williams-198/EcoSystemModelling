function [NewPopulations] = TimeEvolvedPredatorPreySystem(PreyPopulations, ...
                                                         InitialPredatorPopulations, ...
                                                         PredatorPopulations, ...
                                                         TimeStep, ...
                                                         CurrentTime, ...
                                                         PreyGrowthRates, ...
                                                         PredatorGrowthRates, ...
                                                         RemovalInterval, ...
                                                         RemovalProportions, ...
                                                         Predation1Rates, ...
                                                         Predation2Rates, ...
                                                         PreyCarryingCapacities, ...
                                                         PreyCompetitionCoefficients,...
                                                         PredatorCompetitionCoefficients,...
                                                         PredatorDeathRates)
    NumberOfPreys = length(PreyPopulations);
    NumberofPredators = length(PredatorPopulations);
    NewPopulations = zeros(NumberOfPreys + NumberofPredators,1);
    [NewPopulations(1), NewPopulations(2)] = PreyVectorFieldPlotfunc(PreyPopulations(1), ...
                                                        PreyPopulations(2), ...
                                                        PreyGrowthRates(1), ...
                                                        PreyGrowthRates(2), ...
                                                        PreyCompetitionCoefficients(1), ...
                                                        PreyCompetitionCoefficients(2), ...
                                                        PreyCarryingCapacities(1), ...
                                                        PreyCarryingCapacities(2), ...
                                                        PredatorPopulations, ...
                                                        Predation1Rates, ...
                                                        Predation2Rates, ...
                                                        PredatorCompetitionCoefficients);
    NewPopulations(1) = TimeStep * NewPopulations(1);
    NewPopulations(2) = TimeStep * NewPopulations(2);
    NewPopulations(3) = PredatorPopulationChange(PredatorPopulations, ...
                                                     TimeStep, ...
                                                     PredatorGrowthRates(1), ...
                                                     PredatorGrowthRates(2), ...
                                                     PredatorDeathRates, ...
                                                     PreyPopulations(1), ...
                                                     PreyPopulations(2), ...
                                                     PredatorCompetitionCoefficients, ...
                                                     RemovalInterval, ...
                                                     CurrentTime, ...
                                                     InitialPredatorPopulations, ...
                                                     RemovalProportions);
    NewPopulations(1) = NewPopulations(1) + PreyPopulations(1);
    NewPopulations(2) = NewPopulations(2) + PreyPopulations(2);
    NewPopulations(3) = NewPopulations(3) + PredatorPopulations(1);
    for i = 1 : length(NewPopulations)
        if NewPopulations(i) < 0
            NewPopulations(i) = 0;
        end
        if i < 3  && NewPopulations(i) > PreyCarryingCapacities(i)
            NewPopulations(i) = PreyCarryingCapacities(i);
        end
    end
    if mod(CurrentTime,RemovalInterval) == 0 
        if NewPopulations(3) > 0.6 * InitialPredatorPopulations(1)
           NewPopulations(3) = NewPopulations(3) * (1-RemovalProportions);
        end
        if NewPopulations(3) < 0.6 * InitialPredatorPopulations(1)
           NewPopulations(3) = 0.6 * InitialPredatorPopulations(1);
        end
    end
    return
end

