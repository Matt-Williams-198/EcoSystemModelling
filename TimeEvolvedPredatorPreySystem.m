function [NewPopulations] = TimeEvolvedPredatorPreySystem(PreyPopulations, ...
                                                         InitialPredatorPopulations, ...
                                                         PredatorPopulations, ...
                                                         TimeStep, ...
                                                         CurrentTime, ...
                                                         PreyGrowthRates, ...
                                                         PredatorGrowthRates, ...
                                                         RemovalInterval, ...
                                                         RemovalProportions, ...
                                                         Predation1Rates, ...
                                                         Predation2Rates, ...
                                                         PreyCarryingCapacities, ...
                                                         PreyCompetitionCoefficients,...
                                                         PredatorCompetitionCoefficients,...
                                                         PredatorDeathRates)
    NumberOfPreys = length(PreyPopulations);
    NumberofPredators = length(PredatorPopulations);
    NewPopulations = zeros(NumberOfPreys + NumberofPredators,1);
    [NewPopulations(1), NewPopulations(2)] = PreyVectorFieldPlotfunc(PreyPopulations(1), ...
                                                        PreyPopulations(2), ...
                                                        PreyGrowthRates(1), ...
                                                        PreyGrowthRates(2), ...
                                                        PreyCompetitionCoefficients(1), ...
                                                        PreyCompetitionCoefficients(2), ...
                                                        PreyCarryingCapacities(1), ...
                                                        PreyCarryingCapacities(2), ...
                                                        PredatorPopulations, ...
                                                        Predation1Rates, ...
                                                        Predation2Rates, ...
                                                        PredatorCompetitionCoefficients);
    NewPopulations(1) = TimeStep * NewPopulations(1);
    NewPopulations(2) = TimeStep * NewPopulations(2);
    NewPredatorPopulations = PredatorPopulationChange(PredatorPopulations, ...
                                                     TimeStep, ...
                                                     PredatorGrowthRates(:,1), ...
                                                     PredatorGrowthRates(:,2), ...
                                                     PredatorDeathRates, ...
                                                     PreyPopulations(1), ...
                                                     PreyPopulations(2), ...
                                                     PredatorCompetitionCoefficients);
    for i = 1 : length(PredatorPopulations)
        NewPopulations(i+2) = NewPredatorPopulations(i)
    end
    NewPopulations(1) = NewPopulations(1) + PreyPopulations(1);
    NewPopulations(2) = NewPopulations(2) + PreyPopulations(2);
    for i = 1 : length(PredatorPopulations)
        NewPopulations(i+2) = NewPopulations(i+2) + PredatorPopulations(i);
    end
    for i = 1 : length(NewPopulations)
        if NewPopulations(i) < 0
            NewPopulations(i) = 0;
        end
        if i < 3  && NewPopulations(i) > PreyCarryingCapacities(i)
            NewPopulations(i) = PreyCarryingCapacities(i);
        end
    end
    if mod(CurrentTime, RemovalInterval) == 0
        for i = 1 : length(PredatorPopulations)
            if NewPopulations(i+2) > 0.4 * InitialPredatorPopulations(i)
               NewPopulations(i+2) = NewPopulations(i+2) * (1 - RemovalProportions);
            end
            if NewPopulations(i+2) < 0.4 * InitialPredatorPopulations(i) && PredatorPopulations(i) > 0.4 * InitialPredatorPopulations(i)
               NewPopulations(i+2) = 0.4 * InitialPredatorPopulations(i);
            end
        end
    end
    return
end

